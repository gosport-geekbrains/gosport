# Generated by Django 2.2 on 2019-04-04 12:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdmArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Административный округ')),
                ('description', models.CharField(blank=True, max_length=50, verbose_name='Описание округа')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Категория объекта')),
                ('dataset_id', models.PositiveIntegerField(unique=True, verbose_name='Идентификатор датасета')),
                ('marker', models.ImageField(default='point_blue', upload_to='map_markers', verbose_name='Картинка-маркер категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории объекта')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryClear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Категория')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название датасета')),
                ('dataset_id', models.PositiveIntegerField(verbose_name='Идентификатор датасета')),
                ('marker', models.ImageField(default='markers/point_blue.gif', upload_to='markers', verbose_name='Маркер датасета')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Район')),
                ('description', models.TextField(blank=True, verbose_name='Название района')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
            ],
        ),
        migrations.CreateModel(
            name='GeoObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('global_id', models.PositiveIntegerField(verbose_name='Идентификатор объекта')),
                ('object_name', models.CharField(max_length=50, verbose_name='Название объекта (общее)')),
                ('name_winter', models.CharField(blank=True, max_length=50, verbose_name='Зимнее название')),
                ('name_summer', models.CharField(blank=True, max_length=50, verbose_name='Летнее название')),
                ('address', models.TextField(blank=True, verbose_name='Адрес объекта')),
                ('email', models.CharField(blank=True, max_length=50, verbose_name='Адрес электронной почты для связи')),
                ('description', models.TextField(blank=True, verbose_name='Описание объекта')),
                ('web_site', models.CharField(blank=True, max_length=50, verbose_name='Адрес сайта')),
                ('help_phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон для связи')),
                ('working_hours_winter', models.TextField(blank=True, verbose_name='Часы работы зимой')),
                ('working_hours_summer', models.TextField(blank=True, verbose_name='Часы работы летом')),
                ('has_equipment_rental', models.BooleanField(default=False, verbose_name='Наличие проката оборудования')),
                ('has_tech_service', models.BooleanField(default=False, verbose_name='Наличие сервиса оборудования')),
                ('has_dressing', models.BooleanField(default=False, verbose_name='Наличие раздевалки')),
                ('has_eatery', models.BooleanField(default=False, verbose_name='Наличие еды')),
                ('has_toilet', models.BooleanField(default=False, verbose_name='Наличие туалета')),
                ('has_wifi', models.BooleanField(default=False, verbose_name='Наличие WiFi')),
                ('has_cash_machine', models.BooleanField(default=False, verbose_name='Наличие банкомата')),
                ('has_first_aid', models.BooleanField(default=False, verbose_name='Наличие медицинской помощи')),
                ('has_music', models.BooleanField(default=False, verbose_name='Наличие музыки')),
                ('disability_friendly', models.BooleanField(default=False, verbose_name='Приспособлено для инвалидов')),
                ('lighting', models.CharField(blank=True, max_length=50, verbose_name='Освещение')),
                ('paid', models.CharField(blank=True, max_length=50, verbose_name='Платное посещение')),
                ('lat', models.FloatField(verbose_name='Широта')),
                ('lon', models.FloatField(verbose_name='Долгота')),
                ('geo_data', models.TextField(verbose_name='Гео-JSON')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
                ('adm_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='venuesapp.AdmArea', verbose_name='Административный округ')),
                ('category_clear', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='venuesapp.CategoryClear', verbose_name='Очищенный тип объекта')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='venuesapp.District', verbose_name='Название района')),
                ('object_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='venuesapp.Category', verbose_name='Тип объекта')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='photo', verbose_name='Фотография')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности')),
                ('description', models.TextField(blank=True, verbose_name='Описание фото')),
                ('geo_object', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='venuesapp.GeoObject', verbose_name='Объект')),
            ],
        ),
    ]
